name: Python application
env:
      # Container Image Name // update it as per project name.
      image_name: "gitops"
      # Repo Name
      GHCR_REPO: "ghcr.io/umangcypher-bh/gitops-demo"
      # Path to the Dockerfile. (default {context}/Dockerfile)
      docker_file_path: "."
      # "location of lock file in git repository (Trivy will look for vulnerabilities based on lock files such as Gemfile.lock and package-lock.json)"  
      Packages_lock: "."
      # Image Tag
      image_tag: ${{ github.event.inputs.tag }}
      # GH Username 
      username: 'umangcypher-BH'
on:
  workflow_dispatch:
    inputs:
      image_name:
        required: true
        type: string
      # GitHub Repo Name		
      GHCR_REPO:
        required: true
        type: string	
      # Path to the Dockerfile. (default {context}/Dockerfile)
      docker_file_path:
        required: true
        type: string
      image_tag:
        required: true
        type: string
        default: "0"
      Packages_lock:
        type: string
        required: true
        description: "location of lock file Trivy will look for vulnerabilities based on lock files such as Gemfile.lock and package-lock.json"    
      username:
        type: string
        required: true
        description: "github username"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Event Info
        if: github.actor != 'dependabot[bot]' && !(github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: |
          echo "::warning  ::Code changes wont be deployed for pull requests."  
      - name: Clear GitHub Workspace
        run: rm -fr $GITHUB_WORKSPACE && mkdir $GITHUB_WORKSPACE
      
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build docker image from Dockerfile (Optional)
        run: |
          docker build -t ${{ inputs.GHCR_REPO }}${{ inputs.image_name }}:${{ inputs.image_tag }}  ${{ inputs.docker_file_path }}
      - name: copy template file from  shared-workflows repo
        run: |
          git clone https://${{ secrets.GH_TOKEN }}@github.com/BH-Corporate-Functions/shared-workflows.git
      - name: copy the docker file to template directory
        run: |
          cp ${{ inputs.docker_file_path }}/Dockerfile ./shared-workflows/configs   
      - name: Install Trivy CLI
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.31.3
 
      - name: downloading  vulnerability  database
        run: |
          /usr/local/bin/trivy image --download-db-only  
     
      - name: Run Trivy  scan for Docker Image and generate html report
        run: |
          /usr/local/bin/trivy image  --format template --template "@./shared-workflows/html.tpl" --ignorefile "./shared-workflows/.trivyignore" -o Report.html ${{ inputs.GHCR_REPO }}${{ inputs.image_name }}:${{ inputs.image_tag }}
      
      - name: Run Trivy scan for filesystem and generate html report(Trivy will look for vulnerabilities based on lock files such as Gemfile.lock and package-lock.json)
        run: |
          /usr/local/bin/trivy fs --format template --template "@./shared-workflows/html.tpl" --ignorefile "./shared-workflows/.trivyignore" -o Report2.html ${{ inputs.Packages_lock }}
      
      - name: Run Trivy scan for dockerfile 
        run: |
          /usr/local/bin/trivy conf --policy ./shared-workflows/policies --format template --template "@./shared-workflows/html.tpl" -o Report3.html  --namespaces user ./shared-workflows/configs
        
      - name: Append all reports to Report.html
        run: |
          cat Report3.html >> Report2.html;cat Report2.html >> Report.html
      - name: Upload Trivy vulnerabilities Report to artifact
        uses: actions/upload-artifact@v3
        with:
          path: "Report.html"  
#      #  Send Trivy report from self-hosted runner
#      - name: Send Report in mail
#        uses: dawidd6/action-send-mail@v3
#        with:
#          server_address: smtphosthou.bakerhughes.com
#          server_port: 25
#          secure: none
#          username: ${{secrets.Trivy_MAIL_USERNAME}}
#          password: ${{secrets.Trivy_MAIL_PASSWORD}}
#          subject: Trivy Scan Report Github Actions job result
#          to: 'anil.kumar3@bakerhughes.com'
#          cc: 'anil.kumar3@bakerhughes.com'
#          from: svc-checkmarx <svc-checkmarx@bakerhughes.com>
#          body: "Build job of ${{github.repository}} completed successfully!"
#          ignore_cert: true
#          convert_markdown: true
#          reply_to: svc-checkmarx@bakerhughes.com
#          in_reply_to: svc-checkmarx@bakerhughes.com
#          attachments: ./Report.html

      - name: check for Crtical & High vulnerabilities in Docker Image
        run: |
          /usr/local/bin/trivy image --no-progress --exit-code 1 --severity CRITICAL,HIGH --ignore-unfixed --ignorefile "./shared-workflows/.trivyignore" ${{ inputs.GHCR_REPO }}${{ inputs.image_name }}:${{ inputs.image_tag }}
     
      - name: Check for filesystem (Trivy will look for vulnerabilities based on lock files such as Gemfile.lock and package-lock.json)
        run: |
          /usr/local/bin/trivy fs --exit-code 1 --severity CRITICAL,HIGH --ignore-unfixed --ignorefile "./shared-workflows/.trivyignore"  ${{ inputs.Packages_lock }}      

      - name: check for Misconfig in Dockerfile (Optional)
        run: |
          /usr/local/bin/trivy conf --exit-code 1 --severity CRITICAL --policy ./shared-workflows/policies  --namespaces user ./shared-workflows/configs
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: umangcypher-BH
          password: ${{ secrets.GH_TOKEN }}  
      - name: Push Docker Image to registry
        run: |
          docker image push ${{ inputs.GHCR_REPO }}${{ inputs.image_name }}:${{ inputs.image_tag }}
